import numpy
from pyscf import dft, gto, lib, scf

#0 whole system (CH3SH Au20)
mol = gto.M(
    verbose = 4,
    atom = '''
  C        -1.7824605576        6.6814345973        5.3114586391
  S        -0.1501143844        5.9288622681        4.9470138738
  H        -2.1456612670        7.2375829098        4.4443826549
  H        -1.6841021997        7.3378825893        6.1855780726
  H        -2.4775398564        5.8576629127        5.5167304768
  H         0.2951098908        6.8927149259        4.1141796447
 Au        -0.4402938947        4.1647508436        3.2021830942
 Au        -0.0137217387       -4.0827975633        2.8910344586
 Au         4.0386780930        0.3743021764       -2.6579078049
 Au        -4.1497282190       -0.0002395597       -2.8979743990
 Au        -1.7415174007       -0.0333534471        1.1587777274
 Au         1.4307405769        0.1221723745        1.2672878485
 Au        -0.0240471766       -1.4756250206       -1.0648067587
 Au        -0.1829891655        1.7289512142       -1.0048581857
 Au        -0.2867698916        1.3776256715        3.1754246041
 Au         1.3044617513        0.2341364001       -2.9218515761
 Au        -1.4050869298        0.1119123905       -3.0035297198
 Au        -0.1425509480       -1.3397276180        3.1400088596
 Au        -1.7418614286        2.8396820250        1.1400881402
 Au         2.8087896834       -1.2522194487       -0.8179560973
 Au         1.4762352886       -2.7246642161        1.0256794251
 Au        -3.0199086387        1.5066265186       -0.8695358678
 Au         1.1416264041        2.9819112540        1.2003517037
 Au         2.6602599614        1.7610685840       -0.7061032025
 Au        -1.5101592036       -2.8708963231        0.9263808113
 Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'}, ecp = {'Au': 'lanl2dz'})
mf = dft.RKS(mol,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mf.init_guess = 'atom'
mf.kernel()

#1 embedding B (Au14)
molb = gto.M(
    verbose = 4,
    atom = '''
X-C        -1.7824605576        6.6814345973        5.3114586391
X-S        -0.1501143844        5.9288622681        4.9470138738
X-H        -2.1456612670        7.2375829098        4.4443826549
X-H        -1.6841021997        7.3378825893        6.1855780726
X-H        -2.4775398564        5.8576629127        5.5167304768
X-H         0.2951098908        6.8927149259        4.1141796447
X-Au        -0.4402938947        4.1647508436        3.2021830942
 Au        -0.0137217387       -4.0827975633        2.8910344586
 Au         4.0386780930        0.3743021764       -2.6579078049
 Au        -4.1497282190       -0.0002395597       -2.8979743990
X-Au        -1.7415174007       -0.0333534471        1.1587777274
X-Au         1.4307405769        0.1221723745        1.2672878485
 Au        -0.0240471766       -1.4756250206       -1.0648067587
 Au        -0.1829891655        1.7289512142       -1.0048581857
X-Au        -0.2867698916        1.3776256715        3.1754246041
 Au         1.3044617513        0.2341364001       -2.9218515761
 Au        -1.4050869298        0.1119123905       -3.0035297198
 Au        -0.1425509480       -1.3397276180        3.1400088596
X-Au        -1.7418614286        2.8396820250        1.1400881402
 Au         2.8087896834       -1.2522194487       -0.8179560973
 Au         1.4762352886       -2.7246642161        1.0256794251
 Au        -3.0199086387        1.5066265186       -0.8695358678
X-Au         1.1416264041        2.9819112540        1.2003517037
 Au         2.6602599614        1.7610685840       -0.7061032025
 Au        -1.5101592036       -2.8708963231        0.9263808113
 Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'}, ecp = {'Au': 'lanl2dz'})
mfb = dft.RKS(molb,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfb.init_guess = 'atom'
mfb.kernel()

#2 get dm_b, vne_b
dm_b = mfb.make_rdm1()
vne_b = molb.intor_symmetric('int1e_nuc')+molb.intor_symmetric('ECPscalar')

#3 embedded A (CH3SH+Au6 in Au14)
mola = gto.M(
    verbose = 4,
    atom = '''
  C        -1.7824605576        6.6814345973        5.3114586391
  S        -0.1501143844        5.9288622681        4.9470138738
  H        -2.1456612670        7.2375829098        4.4443826549
  H        -1.6841021997        7.3378825893        6.1855780726
  H        -2.4775398564        5.8576629127        5.5167304768
  H         0.2951098908        6.8927149259        4.1141796447
 Au        -0.4402938947        4.1647508436        3.2021830942
X-Au        -0.0137217387       -4.0827975633        2.8910344586
X-Au         4.0386780930        0.3743021764       -2.6579078049
X-Au        -4.1497282190       -0.0002395597       -2.8979743990
 Au        -1.7415174007       -0.0333534471        1.1587777274
 Au         1.4307405769        0.1221723745        1.2672878485
X-Au        -0.0240471766       -1.4756250206       -1.0648067587
X-Au        -0.1829891655        1.7289512142       -1.0048581857
 Au        -0.2867698916        1.3776256715        3.1754246041
X-Au         1.3044617513        0.2341364001       -2.9218515761
X-Au        -1.4050869298        0.1119123905       -3.0035297198
X-Au        -0.1425509480       -1.3397276180        3.1400088596
 Au        -1.7418614286        2.8396820250        1.1400881402
X-Au         2.8087896834       -1.2522194487       -0.8179560973
X-Au         1.4762352886       -2.7246642161        1.0256794251
X-Au        -3.0199086387        1.5066265186       -0.8695358678
 Au         1.1416264041        2.9819112540        1.2003517037
X-Au         2.6602599614        1.7610685840       -0.7061032025
X-Au        -1.5101592036       -2.8708963231        0.9263808113
X-Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'}, ecp = {'Au': 'lanl2dz'})
mfa0 = dft.RKS(mola,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfa0.init_guess = 'atom'
mfa0.kernel()
dm_a0 = mfa0.make_rdm1()
mfa = dft.RKS(mola,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfa.init_guess = 'atom'
mfa.kernel(dm0=dm_a0, KSCED=True, vne_b=vne_b, dm_b=dm_b)

#4 ref A2 (Au6 in Au14)
mola2 = gto.M(
    verbose = 4,
    atom = '''
X-C        -1.7824605576        6.6814345973        5.3114586391
X-S        -0.1501143844        5.9288622681        4.9470138738
X-H        -2.1456612670        7.2375829098        4.4443826549
X-H        -1.6841021997        7.3378825893        6.1855780726
X-H        -2.4775398564        5.8576629127        5.5167304768
X-H         0.2951098908        6.8927149259        4.1141796447
 Au        -0.4402938947        4.1647508436        3.2021830942
X-Au        -0.0137217387       -4.0827975633        2.8910344586
X-Au         4.0386780930        0.3743021764       -2.6579078049
X-Au        -4.1497282190       -0.0002395597       -2.8979743990
 Au        -1.7415174007       -0.0333534471        1.1587777274
 Au         1.4307405769        0.1221723745        1.2672878485
X-Au        -0.0240471766       -1.4756250206       -1.0648067587
X-Au        -0.1829891655        1.7289512142       -1.0048581857
 Au        -0.2867698916        1.3776256715        3.1754246041
X-Au         1.3044617513        0.2341364001       -2.9218515761
X-Au        -1.4050869298        0.1119123905       -3.0035297198
X-Au        -0.1425509480       -1.3397276180        3.1400088596
 Au        -1.7418614286        2.8396820250        1.1400881402
X-Au         2.8087896834       -1.2522194487       -0.8179560973
X-Au         1.4762352886       -2.7246642161        1.0256794251
X-Au        -3.0199086387        1.5066265186       -0.8695358678
 Au         1.1416264041        2.9819112540        1.2003517037
X-Au         2.6602599614        1.7610685840       -0.7061032025
X-Au        -1.5101592036       -2.8708963231        0.9263808113
X-Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'}, ecp = {'Au': 'lanl2dz'})
mfa20 = dft.RKS(mola2,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfa20.init_guess = 'atom'
mfa20.kernel()
dm_a20 = mfa20.make_rdm1()
mfa2 = dft.RKS(mola2,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfa2.init_guess = 'atom'
mfa2.kernel(dm0=dm_a20, KSCED=True, vne_b=vne_b, dm_b=dm_b)

#5 ref A3 (CH3SH)
mola3 = gto.M(
    verbose = 4,
    atom = '''
  C        -1.7824605576        6.6814345973        5.3114586391
  S        -0.1501143844        5.9288622681        4.9470138738
  H        -2.1456612670        7.2375829098        4.4443826549
  H        -1.6841021997        7.3378825893        6.1855780726
  H        -2.4775398564        5.8576629127        5.5167304768
  H         0.2951098908        6.8927149259        4.1141796447
X-Au        -0.4402938947        4.1647508436        3.2021830942
X-Au        -0.0137217387       -4.0827975633        2.8910344586
X-Au         4.0386780930        0.3743021764       -2.6579078049
X-Au        -4.1497282190       -0.0002395597       -2.8979743990
X-Au        -1.7415174007       -0.0333534471        1.1587777274
X-Au         1.4307405769        0.1221723745        1.2672878485
X-Au        -0.0240471766       -1.4756250206       -1.0648067587
X-Au        -0.1829891655        1.7289512142       -1.0048581857
X-Au        -0.2867698916        1.3776256715        3.1754246041
X-Au         1.3044617513        0.2341364001       -2.9218515761
X-Au        -1.4050869298        0.1119123905       -3.0035297198
X-Au        -0.1425509480       -1.3397276180        3.1400088596
X-Au        -1.7418614286        2.8396820250        1.1400881402
X-Au         2.8087896834       -1.2522194487       -0.8179560973
X-Au         1.4762352886       -2.7246642161        1.0256794251
X-Au        -3.0199086387        1.5066265186       -0.8695358678
X-Au         1.1416264041        2.9819112540        1.2003517037
X-Au         2.6602599614        1.7610685840       -0.7061032025
X-Au        -1.5101592036       -2.8708963231        0.9263808113
X-Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'})
mfa3 = dft.RKS(mola3).density_fit(auxbasis='def2-universal-jfit')
mfa3.xc = 'PBE'
mfa3.kernel()

#6 ref B2 (Au20)
molb2 = gto.M(
    verbose = 4,
    atom = '''
X-C        -1.7824605576        6.6814345973        5.3114586391
X-S        -0.1501143844        5.9288622681        4.9470138738
X-H        -2.1456612670        7.2375829098        4.4443826549
X-H        -1.6841021997        7.3378825893        6.1855780726
X-H        -2.4775398564        5.8576629127        5.5167304768
X-H         0.2951098908        6.8927149259        4.1141796447
 Au        -0.4402938947        4.1647508436        3.2021830942
 Au        -0.0137217387       -4.0827975633        2.8910344586
 Au         4.0386780930        0.3743021764       -2.6579078049
 Au        -4.1497282190       -0.0002395597       -2.8979743990
 Au        -1.7415174007       -0.0333534471        1.1587777274
 Au         1.4307405769        0.1221723745        1.2672878485
 Au        -0.0240471766       -1.4756250206       -1.0648067587
 Au        -0.1829891655        1.7289512142       -1.0048581857
 Au        -0.2867698916        1.3776256715        3.1754246041
 Au         1.3044617513        0.2341364001       -2.9218515761
 Au        -1.4050869298        0.1119123905       -3.0035297198
 Au        -0.1425509480       -1.3397276180        3.1400088596
 Au        -1.7418614286        2.8396820250        1.1400881402
 Au         2.8087896834       -1.2522194487       -0.8179560973
 Au         1.4762352886       -2.7246642161        1.0256794251
 Au        -3.0199086387        1.5066265186       -0.8695358678
 Au         1.1416264041        2.9819112540        1.2003517037
 Au         2.6602599614        1.7610685840       -0.7061032025
 Au        -1.5101592036       -2.8708963231        0.9263808113
 Au        -2.8798984522       -1.5140630637       -0.9903384805''',
    basis = {'Au': 'lanl2dz', 'H': '6-31g', 'S': '6-31g', 'C': '6-31g'}, ecp = {'Au': 'lanl2dz'})
mfb2 = dft.RKS(molb2,xc='PBE').density_fit(auxbasis='def2-universal-jfit')
mfb2.init_guess = 'atom'
mfb2.kernel()

#7 get interaction energy (kcal/mol)
Eref = mf.e_tot - mfa3.e_tot - mfb2.e_tot  # CH3SH+Au20 - CH3SH - Au20
Eref = Eref*627.503
print("Reference interaction energy (kcal/mol) " , Eref)

Nuc_rep = mol.energy_nuc() - mola3.energy_nuc() - molb2.energy_nuc() - (mola.energy_nuc() - mola3.energy_nuc() - mola2.energy_nuc()) # = nuclear replusion between CH3SH and Au14, since nuclear repulsion between CH3SH and Au6 is included in Eint
Eint = mfa.e_tot - mfa2.e_tot - mfa3.e_tot + Nuc_rep  # CH3SH+Au6 in Au14 - Au6 in Au14 - CH3SH
Eint = Eint*627.503
print( "Nuc_rep:", Nuc_rep)
print( "Embedding interaction energy (kcal/mol) " , Eint)

#interaction without Au14 should be more attractive
Eint2 = mfa0.e_tot - mfa20.e_tot - mfa3.e_tot  #CH3SH+Au6 - Au6 - CH3SH
Eint2 = Eint2*627.503
print( "interaction energy without embedding (kcal/mol) " , Eint2)

